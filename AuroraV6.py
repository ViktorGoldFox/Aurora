#===================================================#
# ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë #
# ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó #
# ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë #
# ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë #
# ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë #
# ‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù #
#===================================================#

from os import error
from time import sleep
from logzero import logger, logfile

from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
import telebot

import Dependencies.BackGround as BackGround
import Dependencies.DataBase as DataBase

#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
# Bot_config
bot_token = "6904577368:AAHMjsneMF0HaLHiWa08Bv2ZzBZOwIJ7yTo" #Aurora
# bot_token = "6601620934:AAGvgH9rDE4JHrUBThkrXrca9zfJIpMeh0Q" #BotTest
        # main        # second
admins = [1746901164, 1018366370]
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
# Logs
logfile("logs/logs.log")
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
usage_ask = 0
usage_gen = 0
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
# AI config
base_model = "gpt-3.5-turbo-16k-0613"
# base_model = "gpt-4o"
    # ChatGPT
open_ai_token = "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"
    # GigaChat
gigachat_token = "Y2Q4ZmU4YWEtOWE5OS00OGU4LWExNjEtM2U2YWE2Y2NlYzYwOjQzNzI4YjE4LWM1YzAtNDIzYy1iZTA0LWE2OTE1YjE5Yzc3Zg=="
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
# Weather config
base_city = "Saint%20Petersburg"
weather_url = f'https://api.openweathermap.org/data/2.5/weather?q={base_city}&units=metric&lang=ru&appid=c38e5a3db7bd33d13d9d0c37f83ccdec'
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
#Donate config
donate_url = 'https://boosty.to/vitusik_kentusik.org/donate'
ask_coll = 5
gen_coll = 5
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
#Bot config
version = 'v6'
technical_brake = False
gp_id = '-1001665880322'
fresh_time = 5 #In minutes
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
# Config
bot = telebot.TeleBot(bot_token)
# data = pd.read_csv("DateFrame.csv")
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
Censored_path = "Add-ons/censored.png"
#FrontEnd
@bot.message_handler(commands=["/help"])
def help(message):
    ms_text = f"""
/add - –î–æ–±–∞–≤–∏—Ç—å—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö 
/ask –í–æ–ø—Ä–æ—Å - –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å chatGPT
/gen –ü–†–û–ú–¢ - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
/profile - –≤—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
/weather - –í—ã–≤–µ—Å—Ç–∏ –ø–æ–≥–æ–¥—É –≤ –ü–∏—Ç–µ—Ä–µ
/weather –ì–û–†–û–î - –í—ã–≤–µ—Å—Ç–∏ –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ 
/forecast - –í—ã–≤–µ—Å—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã 
VGF¬©                    Aurora{version}"""
    bot.send_message(message.chat.id, ms_text)
    
    logger.info(f"{message.from_user.username} –≤—ã–≤–µ–ª help!")
    

@bot.message_handler(commands=["start"])
def start(message):
    logger.info(f"@{message.from_user.username} –≤—ã–≤–µ–ª start!")
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç! –Ø - –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤–æ–π –±–æ—Ç AuroraBot {version}, –∏ —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–≤–µ—Å–µ–ª–∏—Ç—å—Å—è. –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ –≤ —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö /help. –Ø –ª—é–±–ª—é –æ–±—â–∞—Ç—å—Å—è —Å –ª—é–¥—å–º–∏ –∏ —É–∑–Ω–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ. –î–∞–≤–∞–π –ø–æ–æ–±—â–∞–µ–º—Å—è!")

#add
@bot.message_handler(commands=["profile"])
def profile(message, isBack=False):
    if BackGround.chenkChatType(message): bot.send_message(message.chat.id, "‚ùå–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"); return False
    
    if str(message.chat.type) != 'private': bot.send_message(message.chat.id, "‚ùå–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    
    if (technical_brake) & (message.chat.id not in admins): 
        bot.send_message(message.chat.id, "‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
        return False
        
    profile_data = DataBase.get_profile(message, bot.get_chat_member(gp_id, message.from_user.id).status)
    
    if not isBack:
        DataBase.check.CurentNickname(message)
    
    ms_text = f"""
    ‚≠êÔ∏è–ü—Ä–æ—Ñ–∏–ª—å
    üìï–ò–º—è: {profile_data[0]}
    ‚öôÔ∏è–ú–æ–¥–µ–ª—å: {profile_data[3]}
    üìñ–°—Ç–∞—Ç—É—Å: {profile_data[1]}
    üí≤–¢–æ–∫–µ–Ω—ã: {profile_data[2]}
    üì∏–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {profile_data[4]}
    """
    
    markup = types.InlineKeyboardMarkup()
    change_btn = types.InlineKeyboardButton("‚öôÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å", callback_data="change_model")
    status_btn = types.InlineKeyboardButton("üìñ–ö—É–ø–∏—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data="buy_status")
    tokens_btn = types.InlineKeyboardButton("üí≤–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã", callback_data="buy_tokens")
    images_btn = types.InlineKeyboardButton("üì∏–ö—É–ø–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", callback_data="buy_images")
    
    markup.add(change_btn, status_btn, tokens_btn, images_btn)
    
    if isBack:
        bot.edit_message_text(ms_text, message.chat.id, message.message_id, reply_markup=markup)
    else:
        bot.send_message(message.chat.id, ms_text, reply_markup=markup)
    
    logger.info(f"@{message.from_user.username} –í—ã–≤–µ–ª –ø—Ä–æ—Ñ–∏–ª—å")


@bot.message_handler(commands=["add"])
def add(message):
    ch_id = message.chat.id
    
    if str(message.chat.type) != 'private': bot.send_message(message.chat.id, "‚ùå–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    
    if (technical_brake) & (message.chat.id not in admins): 
        bot.send_message(message.chat.id, "‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
        return False
    
    if bot.get_chat_member(gp_id, message.from_user.id).status == 'left': 
        bot.send_message(message.chat.id, text="‚ùå–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã.")
        return False
    
    if message.text.split()[0] != '/add':
        if BackGround.checkCanceled(message.text): bot.send_message(ch_id, "–û—Ç–º–µ–Ω–∏–ª!")
    
        addResualt = BackGround.addNewUser(message)

        if addResualt == True:
            bot.send_message(ch_id, "‚úÖ–õ–∞–¥–Ω–æ-–ª–∞–¥–Ω–æ, –∑–∞–ø–∏—Å–∞–ª, –æ—Ç—Å—Ç–∞–Ω—å")
            logger.warning(f'–ó–∞–ø–∏—Å–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!')

            return True

        elif addResualt == False:
            bot.send_message(ch_id, "‚ùå–£ –≤–∞—Å —á—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

            logger.error(f"–û—à–∏–±–∫–∞ –≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")

            bot.send_message(ch_id, "–û—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –Ω—É–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: Name Nickname Day Month. –ü—Ä–∏–º–µ—Ä: –í–∏–∫—Ç–æ—Ä @Test 1 5")
            bot.register_next_step_handler(message, add)
        else:
            bot.send_message(ch_id, addResualt)
            bot.send_message(ch_id, "–û—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –Ω—É–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: Name Nickname Day Month. –ü—Ä–∏–º–µ—Ä: –í–∏–∫—Ç–æ—Ä @Test 1 5")
            bot.register_next_step_handler(message, add)
    else:
        bot.send_message(ch_id, "–û—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –Ω—É–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: Name Nickname Day Month. –ü—Ä–∏–º–µ—Ä: –í–∏–∫—Ç–æ—Ä @Test 1 5")
        
        bot.register_next_step_handler(message, add)
        

@bot.message_handler(commands=["forecast"])
def forecast(message):
    try:
        command_split = message.text.split()

        loading_message = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
        loading_message

        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", message.chat.id, loading_message.message_id)
            return False

        if len(command_split) > 1:
            command_split.pop(0)
            sity = " ".join(command_split)
        else:
            sity = "–°–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥"

        weather_text = BackGround.GetForecast(sity)

        weather_text = BackGround.markdown_convert(weather_text)
        
        bot.edit_message_text(weather_text, message.chat.id, loading_message.message_id, parse_mode="MarkdownV2" )

        logger.info(f"@{message.from_user.username} –≤—ã–≤–µ–ª –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")
        
    except Exception as error:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –ø–æ–≥–æ–¥–µ: {error}") 
        send_error(loading_message, "‚ùå–í –Ω–∞–∑–≤–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
        

@bot.message_handler(commands=["weather"])
def weather(message):
    try:
        command_split = message.text.split()

        loading_message = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
        loading_message

        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", message.chat.id, loading_message.message_id)
            return False

        if len(command_split) > 1:
            command_split.pop(0)
            sity = " ".join(command_split)
        else:
            sity = "–°–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥"

        weather_text = BackGround.GetWeather(sity)

        bot.edit_message_text(weather_text, message.chat.id, loading_message.message_id, parse_mode="MarkdownV2")

        logger.info(f"@{message.from_user.username} –≤—ã–≤–µ–ª –ø–æ–≥–æ–¥—É")
        
    except Exception as error:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –ø–æ–≥–æ–¥–µ: {error}") 
        send_error(loading_message, "‚ùå–í –Ω–∞–∑–≤–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")


@bot.message_handler(commands=["sum"])
def sum(message):
    # try:
        loading_mess = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
        loading_mess
        
        logger.info(f"@{message.from_user.username} –ù–∞—á–∞–ª –∑–∞–ø—Ä–æ—Å gpt")
        
        ch_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã
        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", ch_id, loading_mess.message_id)
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≥—Ä—É–ø–ø—ã
        if bot.get_chat_member(gp_id, message.from_user.id).status == 'left': 
            bot.send_message(message.chat.id, text="‚ùå–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã.")
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–≤–µ–∂–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        if BackGround.freshcheck(message, fresh_time): 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ó–∞–ø—Ä–æ—Å —É—Å—Ç–∞—Ä–µ–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –Ω–∏–∫–Ω–µ–π–º
        if message.from_user.username == None: 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ü—Ä–µ–∂–¥–µ —á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–º–∞–Ω–¥—É /ask, –Ω–∞–¥–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º!")
            return False
            
        summorysen_coll = BackGround.GetSummorysenNumber(message)
        
        if BackGround.CheckSumNumberInRange(summorysen_coll):
            send_error(loading_mess.message_id, text="‚ùå–ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: 50,100,150,350. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return False
        
        get_text = BackGround.GetLines(summorysen_coll)
        
        promt = f'–°—É–º–º–∏—Ä—É–π —ç—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —á—Ç–æ –æ–Ω–∏ –ø–∏—Å–∞–ª–∏ –∫—Ä–∞—Ç–∫–æ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–ø–∏—Å–∫–æ–º –∞ —Ü–µ–ª—ã–º —Ç–µ–∫—Å—Ç–æ–º –±–µ–∑ –æ–±—â–µ–π —Ç–µ–º—ã –≤ –∫–æ–Ω—Ü–µ –∏ —Å –∫–∞–ø–µ–ª—å–∫–æ–π –¥–∏—á–∏ –æ–±—ä–µ–º: 0.5 —Å—Ç—Ä–∞–Ω–∏—Ü: {get_text}'
        if summorysen_coll <= 100:
            promt = f'–°—É–º–º–∏—Ä—É–π —ç—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —á—Ç–æ –æ–Ω–∏ –ø–∏—Å–∞–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–ø–∏—Å–∫–æ–º –∞ —Ü–µ–ª—ã–º —Ç–µ–∫—Å—Ç–æ–º –±–µ–∑ –æ–±—â–µ–π —Ç–µ–º—ã –≤ –∫–æ–Ω—Ü–µ–∏ —Å –∫–∞–ø–µ–ª—å–∫–æ–π –¥–∏—á–∏  –æ–±—ä–µ–º: 1 —Å—Ç—Ä–∞–Ω–∏—Ü: {get_text}'
        if summorysen_coll >= 150:
            promt = f'–°—É–º–º–∏—Ä—É–π —ç—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —á—Ç–æ –æ–Ω–∏ –ø–∏—Å–∞–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–ø–∏—Å–∫–æ–º –∞ —Ü–µ–ª—ã–º —Ç–µ–∫—Å—Ç–æ–º –±–µ–∑ –æ–±—â–µ–π —Ç–µ–º—ã –≤ –∫–æ–Ω—Ü–µ –∏ —Å –∫–∞–ø–µ–ª—å–∫–æ–π –¥–∏—á–∏  –æ—á–µ–µ–µ–Ω—å –¥–ª–∏–Ω–Ω–æ –∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –≤ 10 —Å—Ç—Ä–∞–Ω–∏—Ü: {get_text}'
            
        summorysen_text = BackGround.askGPT(promt, "gpt-3.5-turbo-0125", token=open_ai_token)
        summorysen_text = str(f"Aurora-{version} - –ü–æ—Å–ª–µ–¥–Ω–∏–µ {summorysen_coll} c–æ–æ–±—â–µ–Ω–∏–π —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–Ω—ã —Ç–∞–∫: \n{summorysen_text}")
        
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("‚ù§Ô∏è–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞", url=donate_url)
        markup.add(btn)
        
        bot.edit_message_text(chat_id=message.chat.id, message_id=loading_mess.message_id, text=str(summorysen_text))
        
        logger.info(f'@{message.from_user.username} —Å—É–º–º–∏—Ä–æ–≤–∞–ª {summorysen_coll} —Å–æ–æ–±—â–µ–Ω–∏–π')
        
    # except Exception as error:
        # logger.error(f"–û—à–∏–±–∫–∞ sum \n–ö–æ–¥: {error}")
        # 
        # return False


@bot.message_handler(commands=["ask", "gpt"])
def ask(message, chat_is_local = True):
    global usage_ask
    if True:
    # try:
        loading_mess = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
        loading_mess
        
        logger.info(f"@{message.from_user.username} –ù–∞—á–∞–ª –∑–∞–ø—Ä–æ—Å gpt")
        
        ch_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã
        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", ch_id, loading_mess.message_id)
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–≤–µ–∂–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        if BackGround.freshcheck(message, fresh_time): 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ó–∞–ø—Ä–æ—Å —É—Å—Ç–∞—Ä–µ–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –Ω–∏–∫–Ω–µ–π–º
        if message.from_user.username == None: 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ü—Ä–µ–∂–¥–µ —á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–º–∞–Ω–¥—É /ask, –Ω–∞–¥–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º!")
            return False
        
        user_promt = message.text
        
        #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Ç
        if chat_is_local:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–º—Ç–∞
            if BackGround.checkPromt(user_promt):
                user_promt = BackGround.getPromt(user_promt)
            else:
                send_error(bot_ms=loading_mess, error_text="‚ùå–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
                return False
        
        user_gpt_model = DataBase.getCurrentModel(message)
        if user_gpt_model in ["gpt-4-turbo", 'gpt-4-turbo-24-04-09', "gpt-4-1106-preview"]:
            usage_tokens = BackGround.mathToken(text=user_promt, is_gpt4=True)
        else:
            usage_tokens = BackGround.mathToken(text=user_promt)
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if message.reply_to_message != None: user_promt = f"{user_promt}: {message.reply_to_message.text}"
        
        if DataBase.check.tokens_ask(message, usage_tokens):
            bot.edit_message_text("‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤! –î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–∏—Å–∞—Ç—å —Å—é–¥–∞ - @ViktorGoldFox", message.chat.id, loading_mess.message_id)
            return False
        
        if message.chat.id != gp_id:
            DataBase.check.add_user(message, bot.get_chat_member(gp_id, message.from_user.id).status)
        
        DataBase.subtraction_tokens.ask(message, usage_tokens)
        
        answer_text = BackGround.askGPT(user_promt, user_gpt_model, open_ai_token)
        
        if DataBase.check.ShowLastToken(message, gp_id): 
            ms_text = f"{BackGround.markdown_convert(answer_text)} \n{BackGround.GetLastTokens(message, usage_tokens, DataBase.get_last_tokens(message))}"
        
        ms_text = f"{BackGround.markdown_convert(answer_text)}"
        
        if (usage_ask % ask_coll) == 0:
            markup = types.InlineKeyboardMarkup()
            btn_adv = types.InlineKeyboardButton("‚ù§Ô∏è–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞", url=donate_url)
            markup.add(btn_adv)
            bot.edit_message_text(f"""{ms_text}""", ch_id, loading_mess.message_id, reply_markup=markup, parse_mode='MarkdownV2')
        else:
            bot.edit_message_text(f"""{ms_text}""", ch_id, loading_mess.message_id, parse_mode='MarkdownV2')
            
        usage_ask += 1
        
        logger.info(f"@{message.from_user.username} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª GPT \nPromt: {user_promt} \nAverage: {answer_text} \nTokens: {usage_tokens}")
    # except Exception as error:
    #     logger.error(f"–û—à–∏–±–∫–∞ GPT \n–ö–æ–¥: {error}")
        
    #     return False
        

@bot.message_handler(commands=["gen", "generate", "image"])
def generate(message):
    global usage_gen
    try:
        loading_mess = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
        loading_mess
        
        logger.info(f"@{message.from_user.username} –ù–∞—á–∞–ª –∑–∞–ø—Ä–æ—Å gen")
        
        ch_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã
        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", ch_id, loading_mess.message_id)
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–≤–µ–∂–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        if BackGround.freshcheck(message, fresh_time): 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ó–∞–ø—Ä–æ—Å —É—Å—Ç–∞—Ä–µ–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –Ω–∏–∫–Ω–µ–π–º
        if message.from_user.username == None: 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ü—Ä–µ–∂–¥–µ —á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–º–∞–Ω–¥—É /ask, –Ω–∞–¥–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º!")
            return False
        
        user_promt = message.text
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–º—Ç–∞
        if BackGround.checkPromt(user_promt): user_promt = BackGround.getPromt(user_promt)
        else:
            send_error(bot_ms=loading_mess, error_text="‚ùå–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            return False

        if DataBase.check.images_gen(message):
            bot.edit_message_text("‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤! –î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–∏—Å–∞—Ç—å —Å—é–¥–∞ - @ViktorGoldFox", message.chat.id, loading_mess.message_id)
            return False
        
        GenImagesData = BackGround.ImageGenerator(promt=user_promt)
        model_id = BackGround.GetKandiskyModel()
        
        if BackGround.CheckLenImages(images=GenImagesData):
            send_error(bot_ms=loading_mess, error_text="‚ùå–î–æ–ª–≥–∏–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            return False
        
        if BackGround.CheckCensored(images=GenImagesData):
            with open(Censored_path, 'rb') as image:
                bot.send_photo(ch_id, image, caption="‚ùå–ü—Ä–æ–º—Ç –∑–∞—Ü–µ–Ω–∑—É—Ä–µ–Ω. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞")
                bot.delete_message(ch_id, loading_mess.message_id)
                
                return False
        
        BackGround.NotAvailabilityUser(message, gp_id=gp_id, user_status=bot.get_chat_member(gp_id, message.from_user.id).status)
        DataBase.subtraction_tokens.gen(message)
        
        generatedImage = BackGround.ConvertImage(GenImagesData['images'][0])
        
        if usage_gen % gen_coll == 0:
            markup = types.InlineKeyboardMarkup()
            btn = types.InlineKeyboardButton("‚ù§Ô∏è–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞", url=donate_url)
            markup.add(btn)
            
            if BackGround.CheckShowLastToken(message, gp_id):
                bot.send_photo(message.chat.id, generatedImage, caption=str(f"‚úÖKandinsky{model_id} - @{message.from_user.username}, –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ {BackGround.GetLastImages(message, DataBase.get_last_images(message))}"), reply_markup=markup)
            else:
                bot.send_photo(message.chat.id, generatedImage, caption=str(f"‚úÖKandinsky{model_id} - @{message.from_user.username}, –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ"), reply_markup=markup)
        else:
            if BackGround.CheckShowLastToken(message, gp_id):
                bot.send_photo(message.chat.id, generatedImage, caption=str(f"‚úÖKandinsky{model_id} - @{message.from_user.username}, –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ {BackGround.GetLastImages(message, DataBase.get_last_images(message))}"))
            else:
                bot.send_photo(message.chat.id, generatedImage, caption=str(f"‚úÖKandinsky{model_id} - @{message.from_user.username}, –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ"), reply_markup=markup)
                
        bot.delete_message(message.chat.id, message_id=loading_mess.message_id)
        
        usage_gen += 1
        
    except Exception as error:
        logger.error(f"–û—à–∏–±–∫–∞ GPT \n–ö–æ–¥: {error}")
        
        return False

#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
def show_models(message):
    ch_id = message.chat.id
    
    markup = types.InlineKeyboardMarkup()
    
    models = DataBase.get_models(message.chat.id)
    
    for model in models:
        btn = types.InlineKeyboardButton(f"‚öôÔ∏è {model}", callback_data=f"change {model}")
        markup.add(btn)
    
    back_button = types.InlineKeyboardButton(f"–ù–∞–∑–∞–¥", callback_data=f"profile")
    markup.add(back_button)
    
    bot.edit_message_text("–í—ã–±–µ—Ä–µ—Ç–µ –º–æ–¥–µ–ª—å: ", ch_id, message.message_id, reply_markup=markup)

def show_status(message):
    ch_id = message.chat.id
    
    markup = types.InlineKeyboardMarkup()
    
    btnMvp = types.InlineKeyboardButton("MVP | 210‚ÇΩ", callback_data="buy mvp")
    btnPrem = types.InlineKeyboardButton("Premuim | 60‚ÇΩ", callback_data="buy premuim")
    
    markup.add(btnMvp, btnPrem)
    
    back_button = types.InlineKeyboardButton(f"–ù–∞–∑–∞–¥", callback_data=f"profile")
    markup.add(back_button)
    
    bot.edit_message_text("–í—ã–±–µ—Ä–µ—Ç–µ —Å—Ç–∞—Ç—É—Å –∫–æ—Ç–æ—Ä—ã–π –∑–æ—Ç–∏—Ç–µ –ø—Ä–µ–æ–±—Ä–µ—Å—Ç–∏:", ch_id, message.message_id, reply_markup=markup)
    
#BackEnd 

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call: CallbackQuery):
    if call.data == 'change_model':
        show_models(call.message)
        
    if call.data == 'buy_status':
        show_status(call.message)
        
    if call.data == 'buy mvp': 
        bot.edit_message_text("""
‚≠êÔ∏è –ß—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å—Ç–∞—Ç—É—Å MVP, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

 1. üßê–£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º. 
–ì–ª–∞–≤–Ω–∞—è —Å—Ç–∞–Ω–∏—Ü–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ -> —Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É -> –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å ->  –ó–∞–∂–º–∏—Ç–µ –ø–∞–ª—å—Ü–µ–º –ø–æ–ª–µ "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -> –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–º—è
 2. üì≤–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–Ω–∞—Ç —Å—É–º–º–æ–π 210‚ÇΩ –Ω–∞ Boosty (https://boosty.to/aurorabot/donate) —Å —Ç–µ–∫—Å—Ç–æ–º:
{–í–∞—à nickname, –Ω–∞–ø—Ä–∏–º–µ—Ä @ViktorGoldFox} MVP [–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)]
 3. üïó–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 6 —á–∞—Å–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫)

üôè–ü—Ä–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É: @ViktorGoldFox.

‚ù§Ô∏è‚Äçüî• –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!
                              """, call.message.chat.id, call.message.message_id)   
    if call.data == 'buy premuim': 
        bot.edit_message_text("""
‚≠êÔ∏è –ß—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å—Ç–∞—Ç—É—Å MVP, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

 1. üßê–£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º. 
–ì–ª–∞–≤–Ω–∞—è —Å—Ç–∞–Ω–∏—Ü–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ -> —Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É -> –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å ->  –ó–∞–∂–º–∏—Ç–µ –ø–∞–ª—å—Ü–µ–º –ø–æ–ª–µ "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -> –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–º—è
 2. üì≤–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–Ω–∞—Ç —Å—É–º–º–æ–π 60‚ÇΩ –Ω–∞ Boosty (https://boosty.to/aurorabot/donate) —Å —Ç–µ–∫—Å—Ç–æ–º:
{–í–∞—à nickname, –Ω–∞–ø—Ä–∏–º–µ—Ä @ViktorGoldFox} premuim [–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)]
 3. üïó–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 6 —á–∞—Å–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫)

üôè–ü—Ä–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É: @ViktorGoldFox.

‚ù§Ô∏è‚Äçüî• –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!
                              """, call.message.chat.id, call.message.message_id)
    # if call.data == 'change_model':
    #     show_models(call.message)
        
    # if call.data == 'change_model':
    #     show_models(call.message)
    
    if call.data.split()[0] == 'change':
        DataBase.changeModel(call.message, model=call.data.split()[1])
        
        markup = types.InlineKeyboardMarkup()
        back_button = types.InlineKeyboardButton(f"–ù–∞–∑–∞–¥", callback_data=f"profile")
        markup.add(back_button)
    
        bot.edit_message_text(f"–ú–æ–¥–µ–ª—å {call.data.split()[1]} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–∏–Ω–∞", call.message.chat.id, call.message.message_id, reply_markup=markup)
        
    
    if call.data == 'profile':
        profile(call.message, isBack=True)
        
        # bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
    

def send_error(bot_ms, error_text):
    bot.edit_message_text(chat_id=bot_ms.chat.id, message_id=bot_ms.message_id, text=error_text)
    sleep(5)
    bot.delete_message(bot_ms, message_id=bot_ms.message_id)
    
    logger.error(error_text)
    
    
def load_config():
    global base_model, technical_brake, usage_ask, usage_gen
    base_model, technical_brake, usage_ask, usage_gen = BackGround.loadConfig()
    
    logger.info("–ö–æ–Ω—Ñ–∏–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
       
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂ 
if __name__ == "__main__":
    load_config()
    # try:
    if True:
        print("""
 ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë 
 ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó 
 ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë 
 ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë 
 ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë 
 ‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù
              """)
        logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        
        # bot.infinity_polling()
        bot.polling(non_stop=True, interval=1)
        
    # except Exception as error_code:
        # logger.error(f"–û—à–∏–±–∫–∞ —Ö–æ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞! \n–ö–æ–¥: {error_code}")


#===================================================#
# ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë #
# ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó #
# ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë #
# ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë #
# ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë #
# ‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù #
#===================================================#

# from os import error
from datetime import datetime
import schedule
import threading
from time import sleep
from logzero import logger, logfile, loglevel, logging
from sys import exit

from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
import telebot

# from Aurora_bot import NowDR
import Dependencies.BackGround as BackGround
import Dependencies.DataBase as DataBase

#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
# Bot_config
bot_token = "6904577368:AAHMjsneMF0HaLHiWa08Bv2ZzBZOwIJ7yTo" #Aurora
# bot_token = "6601620934:AAGvgH9rDE4JHrUBThkrXrca9zfJIpMeh0Q" #BotTest
        # main        # second
admins = [1746901164, 1018366370]#, 1467854871]
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
# Logs
logfile("logs/logs.log")
logfile("logs/deplogs.log", loglevel=logging.DEBUG)
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
usage_ask = 1
usage_gen = 0
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
# AI config
base_model = "gpt-3.5-turbo-16k-0613"
# base_model = "gpt-4o"
    # ChatGPT
open_ai_token = "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"
    # GigaChat
gigachat_token = "Y2Q4ZmU4YWEtOWE5OS00OGU4LWExNjEtM2U2YWE2Y2NlYzYwOjQzNzI4YjE4LWM1YzAtNDIzYy1iZTA0LWE2OTE1YjE5Yzc3Zg=="
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
# Weather config
base_city = "Saint%20Petersburg"
weather_url = f'https://api.openweathermap.org/data/2.5/weather?q={base_city}&units=metric&lang=ru&appid=c38e5a3db7bd33d13d9d0c37f83ccdec'
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
#Donate config
donate_url = 'https://boosty.to/vitusik_kentusik.org/donate'
ask_coll = 5
gen_coll = 5
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
#Bot config
version = 'v6'
technical_brake = False
gp_id = '-1001665880322'
fresh_time = 5 #In minutes
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
#time 
start_time = datetime.now().replace(microsecond=0)
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
# Config
bot = telebot.TeleBot(bot_token)
# data = pd.read_csv("DateFrame.csv")
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
Censored_path = "Add-ons/censored.png"
#FrontEnd
#! –ü–æ–º–µ–Ω—è—Ç—å –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–º–º–∞–Ω–¥—ã
@bot.message_handler(commands=["help"])
def help(message):
    ms_text = f"""
/add - –î–æ–±–∞–≤–∏—Ç—å—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö 
/ask –í–æ–ø—Ä–æ—Å - –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å chatGPT
/gen –ü–†–û–ú–¢ - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
/profile - –≤—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
/weather - –í—ã–≤–µ—Å—Ç–∏ –ø–æ–≥–æ–¥—É –≤ –ü–∏—Ç–µ—Ä–µ
/weather –ì–û–†–û–î - –í—ã–≤–µ—Å—Ç–∏ –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ 
/forecast - –í—ã–≤–µ—Å—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã 
VGF¬©                    Aurora{version}"""
    bot.send_message(message.chat.id, ms_text)
    
    logger.info(f"{message.from_user.username} –≤—ã–≤–µ–ª help!")
    

@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç! –Ø - –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤–æ–π –±–æ—Ç AuroraBot {version}, –∏ —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–≤–µ—Å–µ–ª–∏—Ç—å—Å—è. –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ –≤ —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö /help. –Ø –ª—é–±–ª—é –æ–±—â–∞—Ç—å—Å—è —Å –ª—é–¥—å–º–∏ –∏ —É–∑–Ω–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ. –î–∞–≤–∞–π –ø–æ–æ–±—â–∞–µ–º—Å—è!")
    logger.info(f"@{message.from_user.username} –≤—ã–≤–µ–ª start!")

#add
@bot.message_handler(commands=["profile"])
def profile(message, isBack=False):
    try:
        logger.info(f"@{message.from_user.username} –ù–∞—á–∞–ª –∑–∞–ø—Ä–æ—Å –∫ –ø—Ä–æ—Ñ–∏–ª—é")
        
        if BackGround.chenkChatType(message): 
            bot.send_message(message.chat.id, "‚ùå–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
            
            logger.info(f"@{message.from_user.username} ‚ùå–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
            return False

        if (technical_brake) & (message.chat.id not in admins): 
            bot.send_message(message.chat.id, "‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
            
            logger.info(f"@{message.from_user.username} ‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
            return False

        # profile_data = DataBase.get_profile(message, bot.get_chat_member(gp_id, message.from_user.id).status)
        
        profile_data = DataBase.get_profile(message, bot.get_chat_member(gp_id, message.from_user.id).status)
        
        logger.info(f"@{message.from_user.username} {profile_data}")

        if not isBack:
            DataBase.check.CurentNickname(message)
            logger.info(f"@{message.from_user.username} –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–∏–∫–Ω–µ–π–º–∞")

        ms_text = f"""
        ‚≠êÔ∏è–ü—Ä–æ—Ñ–∏–ª—å
        üìï–ò–º—è: {profile_data[0]}
        ‚öôÔ∏è–ú–æ–¥–µ–ª—å: {profile_data[3]}
        üìñ–°—Ç–∞—Ç—É—Å: {profile_data[1]}
        üí≤–¢–æ–∫–µ–Ω—ã: {profile_data[2]}
        üì∏–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {profile_data[4]}
        """

        markup = types.InlineKeyboardMarkup()
        change_btn = types.InlineKeyboardButton("‚öôÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å", callback_data="change_model")
        status_btn = types.InlineKeyboardButton("üìñ–ö—É–ø–∏—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data="buy_status")
        tokens_btn = types.InlineKeyboardButton("üí≤–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã", callback_data="buy_tokens")
        images_btn = types.InlineKeyboardButton("üì∏–ö—É–ø–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", callback_data="buy_images")

        markup.add(change_btn, status_btn, tokens_btn, images_btn)

        if isBack:
            bot.edit_message_text(ms_text, message.chat.id, message.message_id, reply_markup=markup)
        else:
            bot.send_message(message.chat.id, ms_text, reply_markup=markup)

        logger.info(f"@{message.from_user.username} –í—ã–≤–µ–ª –ø—Ä–æ—Ñ–∏–ª—å")
        
    except Exception as error:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è! \n –ö–æ–¥: {error}")
        return False


@bot.message_handler(commands=["add"])
def add(message):
    ch_id = message.chat.id
    
    logger.info(f"@{message.from_user.username} ‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
    if str(message.chat.type) != 'private': bot.send_message(message.chat.id, "‚ùå–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"); return False
    
    if (technical_brake) & (message.chat.id not in admins): 
        bot.send_message(message.chat.id, "‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
        return False
    
    if bot.get_chat_member(gp_id, message.from_user.id).status == 'left': 
        bot.send_message(message.chat.id, text="‚ùå–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã.")
        return False
    
    if message.text.split()[0] != '/add':
        if BackGround.add.checkCanceled(message.text): bot.send_message(ch_id, "–û—Ç–º–µ–Ω–∏–ª!"); return False
    
        addResualt = BackGround.add.addNewUser(message)

        if addResualt == True:
            bot.send_message(ch_id, "‚úÖ–õ–∞–¥–Ω–æ-–ª–∞–¥–Ω–æ, –∑–∞–ø–∏—Å–∞–ª, –æ—Ç—Å—Ç–∞–Ω—å")
            logger.warning(f'–ó–∞–ø–∏—Å–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!')

            return True

        elif addResualt == False:
            bot.send_message(ch_id, "‚ùå–£ –≤–∞—Å —á—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

            logger.error(f"–û—à–∏–±–∫–∞ –≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")

            bot.send_message(ch_id, "–û—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –Ω—É–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: Name Nickname Day Month. –ü—Ä–∏–º–µ—Ä: –í–∏–∫—Ç–æ—Ä @Test 1 5")
            bot.register_next_step_handler(message, add)
        else:
            bot.send_message(ch_id, addResualt)
            bot.send_message(ch_id, "–û—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –Ω—É–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: Name Nickname Day Month. –ü—Ä–∏–º–µ—Ä: –í–∏–∫—Ç–æ—Ä @Test 1 5")
            bot.register_next_step_handler(message, add)
    else:
        bot.send_message(ch_id, "–û—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –Ω—É–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: Name Nickname Day Month. –ü—Ä–∏–º–µ—Ä: –í–∏–∫—Ç–æ—Ä @Test 1 5")
        
        bot.register_next_step_handler(message, add)
        

@bot.message_handler(commands=["forecast"])
def forecast(message):
    loading_message = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
    loading_message
    try:
        command_split = message.text.split()

        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", message.chat.id, loading_message.message_id)
            return False

        if len(command_split) > 1:
            command_split.pop(0)
            sity = " ".join(command_split)
        else:
            sity = "–°–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥"

        # try:
        if True:
            weather_text = BackGround.weather.GetForecast(sity)
        # except:
            # send_error(loading_message, "‚ùå–í –Ω–∞–∑–≤–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            
            # return False

        weather_text = BackGround.markdown_convert(weather_text)
        
        bot.edit_message_text(weather_text, message.chat.id, loading_message.message_id, parse_mode="MarkdownV2")

        logger.info(f"@{message.from_user.username} –≤—ã–≤–µ–ª –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")
        
    except Exception as error:
        bot.edit_message_text("‚ùå–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –µ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º!", message.chat.id, loading_message.message_id)
        
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –ø–æ–≥–æ–¥–µ: {error}") 
        
        return False
        
        
@bot.message_handler(commands=["dailyforecast"])
def forecastperday(message):
    try:
        command_split = message.text.split()

        loading_message = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
        loading_message

        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", message.chat.id, loading_message.message_id)
            return False

        if len(command_split) > 1:
            command_split.pop(0)
            sity = " ".join(command_split)
        else:
            sity = "–°–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥"

        try:
            weather_text = BackGround.weather.GetForecastPerDay(sity)
        except:
            send_error(loading_message, "‚ùå–í –Ω–∞–∑–≤–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            
            return False

        weather_text = BackGround.markdown_convert(weather_text)
        
        bot.edit_message_text(weather_text, message.chat.id, loading_message.message_id, parse_mode="MarkdownV2" )

        logger.info(f"@{message.from_user.username} –≤—ã–≤–µ–ª –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")
        
    except Exception as error:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –ø–æ–≥–æ–¥–µ: {error}") 
        send_error(loading_message, "‚ùå–í –Ω–∞–∑–≤–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
        

@bot.message_handler(commands=["weather"])
def weather(message):
    loading_message = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
    loading_message
    try:
        command_split = message.text.split()


        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", message.chat.id, loading_message.message_id)
            return False

        if len(command_split) > 1:
            command_split.pop(0)
            sity = " ".join(command_split)
        else:
            sity = "–°–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥"

        try:
            weather_text = BackGround.weather.GetWeather(sity)
        except:
            send_error(loading_message, "‚ùå–í –Ω–∞–∑–≤–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            
            return False

        bot.edit_message_text(weather_text, message.chat.id, loading_message.message_id)

        logger.info(f"@{message.from_user.username} –≤—ã–≤–µ–ª –ø–æ–≥–æ–¥—É")
        
    except Exception as error:
        bot.edit_message_text("‚ùå–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –µ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º!", message.chat.id, loading_message.message_id)
        
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –ø–æ–≥–æ–¥–µ: {error}") 


@bot.message_handler(commands=["tempmetrics"])
def metrics(message):
    command_split = message.text.split()

    loading_message = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
    loading_message
    
    if (technical_brake) & (message.chat.id not in admins): 
        bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", message.chat.id, loading_message.message_id)
        return False
    
    if len(command_split) > 1:
        command_split.pop(0)
        sity = " ".join(command_split)
    else:
        sity = "–°–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥"
        
    try:
        photo_metrics = BackGround.weather.create_temp_metric(sity)
    except:
        send_error(loading_message, "‚ùå–í –Ω–∞–∑–≤–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
        
        return False
    
    logger.info(f"@{message.from_user.username} –≤—ã–≤–µ–ª –º–µ—Ç—Ä–∏–∫—É —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã")
    
    bot.send_photo(message.chat.id, photo=photo_metrics)
    
    bot.delete_message(message.chat.id, loading_message.message_id)
    

@bot.message_handler(commands=["sum"])
def sum(message):
    loading_mess = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
    loading_mess
    try:
        
        logger.info(f"@{message.from_user.username} –ù–∞—á–∞–ª –∑–∞–ø—Ä–æ—Å sum")
        
        ch_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã
        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", ch_id, loading_mess.message_id)
            return False
        
        if str(message.chat.id) != str(gp_id):
            send_error(loading_mess, "‚ùå–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –≤ –≥—Ä—É–ø–ø–µ")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≥—Ä—É–ø–ø—ã
        if bot.get_chat_member(gp_id, message.from_user.id).status == 'left': 
            send_error(loading_mess, "‚ùå–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã.")
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–≤–µ–∂–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        
        if BackGround.freshcheck(message, fresh_time): 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ó–∞–ø—Ä–æ—Å —É—Å—Ç–∞—Ä–µ–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            return False
            
        if BackGround.summoryzen.CheckSumNumberInRange(summorysen_coll):
            send_error(loading_mess.message_id, text="‚ùå–ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: 50,100,150,350. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return False
        
        summorysen_coll = BackGround.summoryzen.GetSummorysenNumber(message)
        
        
        get_text = BackGround.summoryzen.GetLines(summorysen_coll)
        
        promt = f'–°—É–º–º–∏—Ä—É–π —ç—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —á—Ç–æ –æ–Ω–∏ –ø–∏—Å–∞–ª–∏ –∫—Ä–∞—Ç–∫–æ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–ø–∏—Å–∫–æ–º –∞ —Ü–µ–ª—ã–º —Ç–µ–∫—Å—Ç–æ–º –±–µ–∑ –æ–±—â–µ–π —Ç–µ–º—ã –≤ –∫–æ–Ω—Ü–µ –∏ —Å –∫–∞–ø–µ–ª—å–∫–æ–π –¥–∏—á–∏ –æ–±—ä–µ–º: 0.5 —Å—Ç—Ä–∞–Ω–∏—Ü: {get_text}'
        if summorysen_coll <= 100:
            promt = f'–°—É–º–º–∏—Ä—É–π —ç—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —á—Ç–æ –æ–Ω–∏ –ø–∏—Å–∞–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–ø–∏—Å–∫–æ–º –∞ —Ü–µ–ª—ã–º —Ç–µ–∫—Å—Ç–æ–º –±–µ–∑ –æ–±—â–µ–π —Ç–µ–º—ã –≤ –∫–æ–Ω—Ü–µ–∏ —Å –∫–∞–ø–µ–ª—å–∫–æ–π –¥–∏—á–∏  –æ–±—ä–µ–º: 1 —Å—Ç—Ä–∞–Ω–∏—Ü: {get_text}'
        if summorysen_coll >= 150:
            promt = f'–°—É–º–º–∏—Ä—É–π —ç—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —á—Ç–æ –æ–Ω–∏ –ø–∏—Å–∞–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–ø–∏—Å–∫–æ–º –∞ —Ü–µ–ª—ã–º —Ç–µ–∫—Å—Ç–æ–º –±–µ–∑ –æ–±—â–µ–π —Ç–µ–º—ã –≤ –∫–æ–Ω—Ü–µ –∏ —Å –∫–∞–ø–µ–ª—å–∫–æ–π –¥–∏—á–∏  –æ—á–µ–µ–µ–Ω—å –¥–ª–∏–Ω–Ω–æ –∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –≤ 10 —Å—Ç—Ä–∞–Ω–∏—Ü: {get_text}'
            
        summorysen_text = BackGround.ask.askGPT(promt, "gpt-3.5-turbo-0125", token=open_ai_token)
        summorysen_text = str(f"Aurora-{version} - –ü–æ—Å–ª–µ–¥–Ω–∏–µ {summorysen_coll} c–æ–æ–±—â–µ–Ω–∏–π —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–Ω—ã —Ç–∞–∫: \n{summorysen_text}")
        
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("‚ù§Ô∏è–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞", url=donate_url)
        markup.add(btn)
        
        bot.edit_message_text(chat_id=message.chat.id, message_id=loading_mess.message_id, text=str(summorysen_text))
        
        logger.info(f'@{message.from_user.username} —Å—É–º–º–∏—Ä–æ–≤–∞–ª {summorysen_coll} —Å–æ–æ–±—â–µ–Ω–∏–π')
        
    except Exception as error:
        bot.edit_message_text("‚ùå–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –µ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º!", ch_id, loading_mess.message_id)
        
        logger.error(f"–û—à–∏–±–∫–∞ sum \n–ö–æ–¥: {error}")
        
        return False


@bot.message_handler(commands=["ask", "gpt"])
def ask(message, chat_is_local = True):
    global usage_ask
    # if True:
    loading_mess = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
    loading_mess
    try:
        
        logger.info(f"@{message.from_user.username} –ù–∞—á–∞–ª –∑–∞–ø—Ä–æ—Å gpt")
        
        ch_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã
        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", ch_id, loading_mess.message_id)
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–≤–µ–∂–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        if BackGround.freshcheck(message, fresh_time): 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ó–∞–ø—Ä–æ—Å —É—Å—Ç–∞—Ä–µ–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –Ω–∏–∫–Ω–µ–π–º
        if message.from_user.username == None: 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ü—Ä–µ–∂–¥–µ —á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–º–∞–Ω–¥—É /ask, –Ω–∞–¥–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º!")
            return False
        
        user_promt = message.text
        
        #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Ç
        if chat_is_local:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–º—Ç–∞
            if BackGround.checkPromt(user_promt):
                user_promt = BackGround.getPromt(user_promt)
            else:
                send_error(bot_ms=loading_mess, error_text="‚ùå–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
                return False
        
        if DataBase.check.NotAvailabilityUser(message):
            DataBase.check.add_user(message, bot.get_chat_member(gp_id, message.from_user.id).status)
        # DataBase.check.NotAvailabilityUser(message, gp_id=gp_id, user_status=bot.get_chat_member(gp_id, message.from_user.id).status)
        
        user_gpt_model = DataBase.getCurrentModel(message)
        if user_gpt_model in ["gpt-4-turbo", 'gpt-4-turbo-24-04-09', "gpt-4-1106-preview"]:
            usage_tokens = BackGround.mathToken(text=user_promt, is_gpt4=True)
        else:
            usage_tokens = BackGround.mathToken(text=user_promt)
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if message.reply_to_message != None: user_promt = f"{user_promt}: {message.reply_to_message.text}"
        
        if DataBase.check.tokens_ask(message, usage_tokens):
            markup = types.InlineKeyboardMarkup()
            tokens_btn = types.InlineKeyboardButton("üí≤–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã", callback_data="buy_tokens")
            markup.add(tokens_btn)
            
            bot.edit_message_text("‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤!", message.chat.id, loading_mess.message_id, markup=markup)
            return False
        
        if message.chat.id != gp_id:
            DataBase.check.add_user(message, bot.get_chat_member(gp_id, message.from_user.id).status)
        
        DataBase.subtraction_tokens.ask(message, usage_tokens)
        
        answer_text = BackGround.ask.askGPT(user_promt, user_gpt_model, open_ai_token)
        
        ms_text = f"{BackGround.markdown_convert(answer_text)}"
        
        if DataBase.check.ShowLastToken(message.chat.id, gp_id): 
            ms_text = f"{ms_text} \n{BackGround.Tokens.GetLastTokens(message, usage_tokens, DataBase.get_last_tokens(message))}"
        
        
        if (usage_ask % ask_coll) == 0:
            markup = types.InlineKeyboardMarkup()
            btn_adv = types.InlineKeyboardButton("‚ù§Ô∏è–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞", url=donate_url)
            markup.add(btn_adv)
            bot.edit_message_text(f"""{ms_text}""", ch_id, loading_mess.message_id, reply_markup=markup, parse_mode='MarkdownV2')
        else:
            bot.edit_message_text(f"""{ms_text}""", ch_id, loading_mess.message_id, parse_mode='MarkdownV2')
            
        usage_ask += 1
        
        logger.info(f"@{message.from_user.username} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª GPT \nPromt: {user_promt} \nAverage: {answer_text} \nTokens: {usage_tokens}")
    except Exception as error:
        bot.edit_message_text("‚ùå–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –µ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º!", ch_id, loading_mess.message_id)
    
        logger.error(f"–û—à–∏–±–∫–∞ GPT \n–ö–æ–¥: {error}")
        
        return False
        

@bot.message_handler(commands=["gen", "generate", "image"])
def generate(message):
    global usage_gen
    loading_mess = bot.send_message(message.chat.id, "üïê –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
    loading_mess
    
    try:
        
        logger.info(f"@{message.from_user.username} –ù–∞—á–∞–ª –∑–∞–ø—Ä–æ—Å gen")
        
        ch_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã
        if (technical_brake) & (message.chat.id not in admins): 
            bot.edit_message_text("‚ùå–ò–¥—É—Ç —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", ch_id, loading_mess.message_id)
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–≤–µ–∂–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        if BackGround.freshcheck(message, fresh_time): 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ó–∞–ø—Ä–æ—Å —É—Å—Ç–∞—Ä–µ–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –Ω–∏–∫–Ω–µ–π–º
        if message.from_user.username == None: 
            send_error(bot_ms=loading_mess, error_text="‚ùå–ü—Ä–µ–∂–¥–µ —á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–º–∞–Ω–¥—É /ask, –Ω–∞–¥–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º!")
            return False
        
        user_promt = message.text
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–º—Ç–∞
        if BackGround.checkPromt(user_promt): user_promt = BackGround.getPromt(user_promt)
        else:
            send_error(bot_ms=loading_mess, error_text="‚ùå–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            return False

        if DataBase.check.images_gen(message):
            markup = types.InlineKeyboardMarkup()
            images_btn = types.InlineKeyboardButton("üì∏–ö—É–ø–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", callback_data="buy_images")
            markup.add(images_btn)
            
            bot.edit_message_text("‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∞—Ä—Ç–∏–Ω!", message.chat.id, loading_mess.message_id, markup=markup)
            return False
        
        GenImagesData = BackGround.gen.ImageGenerator(promt=user_promt)
        model_id = BackGround.gen.GetKandiskyModel()
        
        if BackGround.gen.CheckLenImages(images=GenImagesData):
            send_error(bot_ms=loading_mess, error_text="‚ùå–î–æ–ª–≥–∏–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
            return False
        
        if BackGround.gen.CheckCensored(images=GenImagesData):
            with open(Censored_path, 'rb') as image:
                bot.send_photo(ch_id, image, caption="‚ùå–ü—Ä–æ–º—Ç –∑–∞—Ü–µ–Ω–∑—É—Ä–µ–Ω. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞")
                bot.delete_message(ch_id, loading_mess.message_id)
                
                return False
        
        if DataBase.check.subscribe(message, bot.get_chat_member(-1002064516590, message.from_user.id).status):
            send_error(loading_mess, "‚ùå–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @Aurorafloodbot_info –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É")
            
            return False
        
        if DataBase.check.NotAvailabilityUser(message):
            DataBase.check.add_user(message, bot.get_chat_member(gp_id, message.from_user.id).status)
        
        DataBase.subtraction_tokens.gen(message)
        
        generatedImage = BackGround.gen.ConvertImage(GenImagesData['images'][0])
        
        if usage_gen % gen_coll == 0:
            markup = types.InlineKeyboardMarkup()
            btn = types.InlineKeyboardButton("‚ù§Ô∏è–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞", url=donate_url)
            markup.add(btn)
            
            if DataBase.check.ShowLastToken(message.chat.id, gp_id):
                bot.send_photo(message.chat.id, generatedImage, caption=str(f"‚úÖKandinsky{model_id} - @{message.from_user.username}, –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ {BackGround.Tokens.GetLastImages(message, DataBase.get_last_images(message))}"), reply_markup=markup)
            else:
                bot.send_photo(message.chat.id, generatedImage, caption=str(f"‚úÖKandinsky{model_id} - @{message.from_user.username}, –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ"), reply_markup=markup)
        else:
            if DataBase.check.ShowLastToken(message.chat.id, gp_id):
                bot.send_photo(message.chat.id, generatedImage, caption=str(f"‚úÖKandinsky{model_id} - @{message.from_user.username}, –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ {BackGround.Tokens.GetLastImages(message, DataBase.get_last_images(message))}"))
            else:
                bot.send_photo(message.chat.id, generatedImage, caption=str(f"‚úÖKandinsky{model_id} - @{message.from_user.username}, –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ"), reply_markup=markup)
                
        bot.delete_message(message.chat.id, message_id=loading_mess.message_id)
        
        usage_gen += 1
        
        logger.info(f"@{message.from_user.username} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª GEN \nPromt: {user_promt}")
        
    except Exception as error:
        bot.edit_message_text("‚ùå–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –µ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º!", ch_id, loading_mess.message_id)
        
        logger.error(f"–û—à–∏–±–∫–∞ GEN \n–ö–æ–¥: {error}")
        
        return False


@bot.message_handler(commands=['easter'])
def Easter(message):
    logger.warning(f'@{message.from_user.username} –ù–∞—à–µ–ª –ø–æ—Å—Ö–∞–ª–∫—É!!!!!!!!')
    
    bot.send_message(message.from_user.id, ".       ‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°á\n‚†Ä‚†Ä‚†Ä‚£ª‚£ø‚£∂‚£§‚£Ä‚¢à‚£Ä‚£≤‚£∑‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚£∑‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚¢†‚£æ‚£õ‚¢ø‚†ø‚¢ø‚£ø‚£ø‚£ø‚£õ‚£π‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£∂‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†ú‚£ø‚°ü‚†∏‚£ø‚£ø‚£ø‚¢ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ë‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚£ø‚£ó‚†∞‚†ò‚°π‚°è‚£Ä‚°ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢Ü‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚¢Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†ò‚£ø‚£Ω‚†Ä‚†Ä‚†Å‚†Å‚†ò‚†Ω‚¢ª‚£ø‚°è‚£π‚£ø‚°ø‚£ø‚†Å‚†â‚¢Ä‚£§‚£æ‚£æ‚£ø‚£ø‚†ó‚†ã‚†Å‚†Ä‚†Ä\n‚†Ä‚†Ä‚†∏‚°∏‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ß‚£ø‚£ø‚°ó‚†É‚†Ä‚£ê‚£æ‚£ø‚£ø‚£ø‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£∑‚£∂‚£≤‚£∑‚£Ñ‚°æ‚£Ω‚£ü‚£õ‚£õ‚£õ‚°ì‚†∂‚£ü‚£ø‚£ø‚°ø‚£µ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£´‚£ø‚£Ω‚£ø‚£∂‚£∂‚£∂‚£ø‚°û‚†ò‚£ø‚£ø‚£ø‚£∑‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚¢ø‚¢è‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ó‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ß‚¢®‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ç‚£º‚°æ‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£æ‚£Ü‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†ç‚£ø‚£ª‚£¶‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚¢Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£ø‚£ø‚£ø‚£á‚°Ñ‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ß‚£∏‚£ø‚£ø‚°ø‚°ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚£ø‚£ø‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ü‚£ø‚£æ‚£∑‚°ª‚£ç‚¢Ω‚£ø‚£ø‚°Ñ‚¢Ä‚°Ä‚¢Ä‚°Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚°ü‚¢ã‚£ª‚†ø‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£∑‚°Ñ‚†ñ‚¢Ä‚†Ä‚†à‚†Ä‚†ª‚£ø‚°ü‚†É‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚¢Å‚£æ‚£ø‚£ø‚°æ‚°ú‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚¢†‚°Ñ‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚£µ‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚£Ä‚£º‚°ó‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚£∏‚¢ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ü‚†Ä\n‚†Ä‚†Ä‚††‚†ª‚†ø‚£ø‚£≠‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†â‚†Å‚†Ä‚†Ä\n‚†Ä‚†Ä‚†ò‚£§‚£Ä‚£É‚£Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ã‚£†‚£¥‚†á‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†∏‚†â‚†π‚†á‚†Ä‚†à‚£ª‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†´‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†è‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚†Ä‚£ß‚£ø‚£ø‚†ü‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†Ä‚†Ä‚†Ä‚°∂‚£§‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ø‚£ø‚£ã‚°í‚¢§‚£Ñ‚£Ä‚£†‚°Ñ\n")


@bot.message_handler(commands=["getId"])
def getId(message):
    bot.send_message(message.chat.id, str(message.chat.id))
    
@bot.message_handler(commands=["test"])
def test(message):
    DataBase.giveAllTokens()
    
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
@bot.message_handler(commands=["sudo"], func=lambda message: message.chat.id in admins)
def sudo(message):
    ch_id = message.chat.id
    
    command_split = message.text.split()
    if len(command_split) < 2: 
        text = """
```
/sudo info
```
–í—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
```
/sudo GetChatId (1 userName)
```
–ü–æ–ª—É—á–∏—Ç—å —á–∞—Ç –∞–π–¥–∏ –ø–æ –Ω–∏–∫ –Ω–µ–º—É (1)

```
/sudo sendMessage (1 text) (2 chat_id)
```
–í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ (1) –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —á–∞—Ç (2)

```
/sudo logs (1 num)
```
–í—ã–≤–æ–¥–∏—Ç (1) —Å—Ç—Ä–æ—á–µ–∫ –ª–æ–≥–∞

```
/sudo clearLogs
```
–û—á–∏—à–∞–µ—Ç –ª–æ–≥–∏

```
/sudo setStatus (1 status) (2 user chatid)
``` 
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç (1) —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (2)

```
/sudo giveTokens (1 num) (2 user chatid)
``` 
–í—ã–¥–∞–µ—Ç (1) –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (2)

```
/sudo giveImages (1 num) (2 user chatid)
``` 
–í—ã–¥–∞–µ—Ç (1)  –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (2)
```
/sudo stop
```
–û—Ç—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ—Ç–∞ 

/sudo - –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã
                         """
        text = BackGround.markdown_convert(text)
        
        bot.send_message(ch_id, text,parse_mode="MarkdownV2")
        logger.warning(f'@{message.from_user.username} –í—ã–≤–µ–ª —Ö–æ–º—è–∫!')
        return True
    
    match str(command_split[1]):
        case "GetChatId":
            if len(command_split) < 3: 
                bot.send_message(ch_id, "‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
                return False
            
            bot.send_message(ch_id, DataBase.check.user(str(command_split[2])))
            
            
        case "logs":
            if len(command_split) < 3: 
                bot.send_messge(ch_id, "‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
                return False
            
            bot.send_message(ch_id, BackGround.logs.get_logs(int(command_split[2])))
            
            logger.warning(f'@{message.from_user.username} –í—ã–≤–µ–ª –ª–æ–≥–∏!')
        
        
        case "clearLogs":
            BackGround.logs.clearLogs()
            bot.send_message(ch_id, "‚úÖ–£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–Ω–æ")
            
            logger.warning(f'@{message.from_user.username} –û—á–∏—Å—Ç–∏–ª –ª–æ–≥–∏!')
        
        
        case "info":
            current_time = datetime.now().replace(microsecond=0)
            time_work = current_time - start_time
            bot.send_message(message.from_user.id,f"""```Json
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïü‚û£–°—Ç–∞—Ç—É—Å: OK          
‚ïü‚û£–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: "{time_work}"
‚ïü‚û£–¢–µ—Ö —Ä–∞–±–æ—Ç—ã: "{technical_brake}"
‚ïü‚û£GPT –∑–∞–ø—Ä–æ—Å–æ–≤: "{usage_ask}"
‚ïü‚û£GEN –∑–∞–ø—Ä–æ—Å–æ–≤: "{usage_gen}"
‚ïü‚û£–í–µ—Ä—Å–∏—è: "{version}"
```""", parse_mode='MarkdownV2')
            logger.warning(f'@{message.from_user.username} –£–∑–Ω–∞–ª –∏–Ω—Ñ—É!')
        
        
        case "sendMessage":
            if len(command_split) < 4: 
                bot.send_message(ch_id, "‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
                return False
            try:
                if str(command_split[2]) == "GP":
                    bot.send_message(gp_id, str(command_split[3]))
                else:
                    bot.send_message(command_split[2], str(command_split[3]))
                    
                bot.send_message(ch_id, "‚úÖ–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ")
            except Exception as error:
                bot.send_message(ch_id, str(error))
        
        
        case "tokens":
            if len(command_split) < 5: 
                bot.send_message(ch_id, "‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
                return False
            
            print(command_split[2])
            print(command_split[3])
            command_split[4] = str(command_split[4]).replace("@", "")
            print(command_split[4])
            
            if command_split[2] not in ["give", "set"]:
                bot.send_message(ch_id, "‚ùå–ù–µ–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. set –∏–ª–∏ give")
                return False
            
            if str(command_split[2]) == "give":
                bot.send_message(ch_id, DataBase.giveTokens(command_split[4], command_split[3]))
            elif str(command_split[2] == 'set'):
                bot.send_message(ch_id, DataBase.setTokens(command_split[4], command_split[3]))
        
        
        case "images":
            if len(command_split) < 5: 
                bot.send_message(ch_id, "‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
                return False
            
            if str(command_split[2]) not in ["give", "set"]:
                bot.send_message(ch_id, "‚ùå–ù–µ–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. set –∏–ª–∏ give")
                return False
            
            if str(command_split[2]) == "give":
                bot.send_message(ch_id, DataBase.giveImage(command_split[4], command_split[3]))
            elif str(command_split[2] == 'set'):
                bot.send_message(ch_id, DataBase.setImage(command_split[4], command_split[3]))
        
        
        case "setStatus":
            if len(command_split) < 4: 
                bot.send_mes—Ñsge(ch_id, "‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
                return False
            
            bot.send_message(ch_id, DataBase.setStatus(command_split[3], command_split[2]))
           
            
        case "stop":
            exit()
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂
def show_models(message):
    ch_id = message.chat.id
    
    markup = types.InlineKeyboardMarkup()
    
    models = DataBase.get_models(message.chat.id)
    
    for model in models:
        btn = types.InlineKeyboardButton(f"‚öôÔ∏è {model}", callback_data=f"change {model}")
        markup.add(btn)
    
    back_button = types.InlineKeyboardButton(f"–ù–∞–∑–∞–¥", callback_data=f"profile")
    markup.add(back_button)
    
    bot.edit_message_text("–í—ã–±–µ—Ä–µ—Ç–µ –º–æ–¥–µ–ª—å: ", ch_id, message.message_id, reply_markup=markup)


def show_status(message):
    ch_id = message.chat.id
    
    markup = types.InlineKeyboardMarkup()
    
    btnMvp = types.InlineKeyboardButton("MVP | 210‚ÇΩ", callback_data="buy mvp")
    btnPrem = types.InlineKeyboardButton("Premuim | 60‚ÇΩ", callback_data="buy premuim")
    
    markup.add(btnMvp, btnPrem)
    
    back_button = types.InlineKeyboardButton(f"–ù–∞–∑–∞–¥", callback_data=f"profile")
    markup.add(back_button)
    
    bot.edit_message_text("–í—ã–±–µ—Ä–µ—Ç–µ —Å—Ç–∞—Ç—É—Å –∫–æ—Ç–æ—Ä—ã–π –∑–æ—Ç–∏—Ç–µ –ø—Ä–µ–æ–±—Ä–µ—Å—Ç–∏:", ch_id, message.message_id, reply_markup=markup)
   
#BackEnd 
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call: CallbackQuery):
    if call.data == 'change_model':
        show_models(call.message)
        
    
    if call.data == 'buy_status':
        show_status(call.message)
        
    
    if call.data == 'buy mvp': 
        bot.edit_message_text("""
‚≠êÔ∏è –ß—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å—Ç–∞—Ç—É—Å MVP, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

 1. üßê–£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º. 
–ì–ª–∞–≤–Ω–∞—è —Å—Ç–∞–Ω–∏—Ü–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ -> —Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É -> –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å ->  –ó–∞–∂–º–∏—Ç–µ –ø–∞–ª—å—Ü–µ–º –ø–æ–ª–µ "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -> –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–º—è
 2. üì≤–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–Ω–∞—Ç —Å—É–º–º–æ–π 210‚ÇΩ –Ω–∞ Boosty (https://boosty.to/aurorabot/donate) —Å —Ç–µ–∫—Å—Ç–æ–º:
{–í–∞—à nickname, –Ω–∞–ø—Ä–∏–º–µ—Ä @ViktorGoldFox} MVP [–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)]
 3. üïó–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 6 —á–∞—Å–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫)

üôè–ü—Ä–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É: @ViktorGoldFox.

‚ù§Ô∏è‚Äçüî• –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!
                              """, call.message.chat.id, call.message.message_id)   
        
    
    if call.data == 'buy_tokens': 
        bot.edit_message_text("""
‚≠êÔ∏è –ß—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω—ã, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

 1. üßê–£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º. 
–ì–ª–∞–≤–Ω–∞—è —Å—Ç–∞–Ω–∏—Ü–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ -> —Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É -> –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å ->  –ó–∞–∂–º–∏—Ç–µ –ø–∞–ª—å—Ü–µ–º –ø–æ–ª–µ "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -> –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–º—è
 2. üì≤–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–Ω–∞—Ç —Å—É–º–º–æ–π 1 —Ç–æ–∫–µ–Ω = 0,1‚ÇΩ –Ω–∞ Boosty (https://boosty.to/aurorabot/donate) —Å —Ç–µ–∫—Å—Ç–æ–º:
{–í–∞—à nickname, –Ω–∞–ø—Ä–∏–º–µ—Ä @ViktorGoldFox} —Ç–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ [–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)]
 3. üïó–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 6 —á–∞—Å–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫)

üôè–ü—Ä–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É: @ViktorGoldFox.

‚ù§Ô∏è‚Äçüî• –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!
                              """, call.message.chat.id, call.message.message_id) 
        
        
    if call.data == 'buy_images': 
        bot.edit_message_text("""
‚≠êÔ∏è –ß—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω—ã, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

 1. üßê–£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º. 
–ì–ª–∞–≤–Ω–∞—è —Å—Ç–∞–Ω–∏—Ü–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ -> —Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É -> –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å ->  –ó–∞–∂–º–∏—Ç–µ –ø–∞–ª—å—Ü–µ–º –ø–æ–ª–µ "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -> –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–º—è
 2. üì≤–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–Ω–∞—Ç —Å—É–º–º–æ–π –æ–¥–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∞ = 0,5‚ÇΩ –Ω–∞ Boosty (https://boosty.to/aurorabot/donate) —Å —Ç–µ–∫—Å—Ç–æ–º:
{–í–∞—à nickname, –Ω–∞–ø—Ä–∏–º–µ—Ä @ViktorGoldFox} —Ç–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–∏–Ω [–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)]
 3. üïó–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 6 —á–∞—Å–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫)

üôè–ü—Ä–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É: @ViktorGoldFox.

‚ù§Ô∏è‚Äçüî• –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!
                              """, call.message.chat.id, call.message.message_id) 
          
    
    if call.data == 'buy premuim': 
        bot.edit_message_text("""
‚≠êÔ∏è –ß—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å—Ç–∞—Ç—É—Å MVP, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

 1. üßê–£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º. 
–ì–ª–∞–≤–Ω–∞—è —Å—Ç–∞–Ω–∏—Ü–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ -> —Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É -> –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å ->  –ó–∞–∂–º–∏—Ç–µ –ø–∞–ª—å—Ü–µ–º –ø–æ–ª–µ "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -> –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–º—è
 2. üì≤–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–Ω–∞—Ç —Å—É–º–º–æ–π 60‚ÇΩ –Ω–∞ Boosty (https://boosty.to/aurorabot/donate) —Å —Ç–µ–∫—Å—Ç–æ–º:
{–í–∞—à nickname, –Ω–∞–ø—Ä–∏–º–µ—Ä @ViktorGoldFox} premuim [–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)]
 3. üïó–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 6 —á–∞—Å–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫)

üôè–ü—Ä–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É: @ViktorGoldFox.

‚ù§Ô∏è‚Äçüî• –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!
                              """, call.message.chat.id, call.message.message_id)
    
    
    if call.data.split()[0] == 'change':
        DataBase.changeModel(call.message, model=call.data.split()[1])
        
        markup = types.InlineKeyboardMarkup()
        back_button = types.InlineKeyboardButton(f"–ù–∞–∑–∞–¥", callback_data=f"profile")
        markup.add(back_button)
    
        bot.edit_message_text(f"–ú–æ–¥–µ–ª—å {call.data.split()[1]} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–∏–Ω–∞", call.message.chat.id, call.message.message_id, reply_markup=markup)
        
    
    if call.data == 'profile':
        profile(call.message, isBack=True)
        
        # bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)

@bot.message_handler(func=lambda message: str(message.chat.id) == gp_id, content_types=['text'])
def write_chat_history(message):
    if True:
        message_text = str(message.text)
        message_username = str(message.from_user.username)
        save_text = str(message_username + ":" + message_text + '\n')
        with open("DataWrames/HistoryData.txt", 'a', encoding='utf-8') as file:
            file.write(str(save_text))
        file.close()

def send_error(bot_ms, error_text):
    bot.edit_message_text(chat_id=bot_ms.chat.id, message_id=bot_ms.message_id, text=error_text)
    sleep(5)
    bot.delete_message(bot_ms.chat.id, message_id=bot_ms.message_id)
    
    logger.error(error_text)

#everys
def checkbr(NowDay=0,NowMonth=0):
    # try:
    if True:
        NowDate = datetime.now()
        NowDay = NowDate.day
        NowMonth = NowDate.month
        
        print(0)
            
        nicknames, names = DataBase.checkBirthday(NowDay, NowMonth)
        
        ind = 0
        for i in range(len(nicknames)):
            text = f"–î–æ–±—Ä–æ–≥–æ –¥–Ω—è! –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É {nicknames[i]}, –ø–æ–∂–µ–ª–∞–µ–º {names[i]} —É–¥–∞—á–∏, —Å—á–∞—Å—Ç—å—è, –æ—Ç–ª–∏—á–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ –≤—Å–µ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ!\n"
            bot.send_message(gp_id, "‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì\n" + text + "‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì=‚Äì")
            
            ind += 1
            
    # except Exception as e:
    #     logger.error(f"–û—à–∏–±–∫–∞ –≤ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")   
    
    
def load_config():
    global base_model, technical_brake, usage_ask, usage_gen, global_time_work
    base_model, technical_brake, usage_ask, usage_gen = BackGround.config.loadConfig()
    
    logger.info("–ö–æ–Ω—Ñ–∏–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")


def exit():
    BackGround.config.pushConfig(technical_brake, usage_ask, usage_gen)
       
      
def send_weather():
    try:
        weather_text = BackGround.weather.GetWeather(sity = "–°–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥")
        
        text = (f"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –ü–µ—Ç–µ—Ä–±—É—Ä–∂—Ü—ã! \n{weather_text}")

        #–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –≥—Ä—É–ø–ø—É
        bot.send_message(gp_id,text)
        
        logger.info(f'–ü–æ–≥–æ–¥–∞ –≤ 8:00 —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞')
    
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –≤ –ø–æ–≥–æ–¥–µ. –ö–æ–¥: {e}') 
       
       
def treager():
    while True:
        schedule.run_pending()
        sleep(1)
#=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂=Ã∂ 
if __name__ == "__main__":
    schedule.every().sunday.at("00:00").do(DataBase.giveAllTokens)
    schedule.every().day.at("00:01").do(DataBase.RestartStatus)
    schedule.every().day.at("10:00").do(checkbr)
    schedule.every().day.at("08:00").do(send_weather)
    
    threading_treager = threading.Thread(target=treager)
    threading_treager.start()
    
    print("""
 ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë 
 ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó 
 ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë 
 ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë 
 ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë 
 ‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù
              """)
    load_config()
    # try:
    if True:
        logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")

        # bot.infinity_polling()
        try:
            bot.polling(non_stop=True, interval=1)
        except KeyboardInterrupt:
            
            exit(0)
        
    # except Exception as error_code:
        # logger.error(f"–û—à–∏–±–∫–∞ —Ö–æ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞! \n–ö–æ–¥: {error_code}")

